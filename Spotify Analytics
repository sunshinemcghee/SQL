# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 



SELECT * FROM Spotifydata;



/*What is the average danceability by artist? */

SELECT AVG(danceability), artist_name FROM Spotifydata
Group By artist_name;



/*What is the average danceability of all songs in the Spotify playlist? */

SELECT AVG(danceability) FROM Spotifydata;



/*Who are the top 10 artists based on popularity? */

SELECT artist_name, popularity, danceability FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10;



/*What artist released the longest song? */

SELECT artist_name,MAX(duration_ms) AS song_length FROM Spotifydata;



/*What's the average danceability for the 20 most popular songs?*/

SELECT AVG(danceability) FROM Spotifydata WHERE popularity IN (SELECT popularity FROM Spotifydata
ORDER BY popularity DESC
LIMIT 20)
;



/*How many artists are featured in the top 50?*/

SELECT COUNT(DISTINCT artist_name) FROM Spotifydata;



/*What song has the highest popularity?*/

SELECT track_name, MAX(popularity) FROM Spotifydata
;



/*Which artist and song hold the least popular song in the top 50?*/

SELECT artist_name, track_name, MIN(popularity) FROM Spotifydata
;
