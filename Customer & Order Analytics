#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

/*How many orders were placed in January? Remember to filter out the blank and incorrect order IDs like we did in the "dealing with messy data" section of the previous lesson! */
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID<> 'Order ID';


/*How many of those orders were for an iPhone? */
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID<> 'Order ID'
AND Product LIKE '%iPhone%';

/*Select the customer account numbers for all the orders that were placed in February. */
SELECT DISTINCT BIT_DB.customers.acctnum
FROM BIT_DB.FebSales
INNER JOIN BIT_DB.customers
ON BIT_DB.FebSales.orderID=
BIT_DB.customers.order_id
WHERE length(order_id) = 6
AND order_id <> 'Order ID'
;


/*Which product was the cheapest one sold in January, and what was the price? */
SELECT Product, MIN(price) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID<> 'Order ID'


/*What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products). */
SELECT Product, SUM(Quantity)*price AS Revenue
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID<> 'Order ID'
GROUP BY Product
ORDER BY Revenue;



/*Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue? */
SELECT Product, SUM(Quantity), SUM(Quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE location LIKE '%548 LINCOLN ST%'
GROUP BY Product;


/*How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? */
SELECT COUNT(DISTINCT customers.acctnum), AVG(Quantity*Price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON FebSales.orderID=customers.order_id
WHERE FebSales.Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';
